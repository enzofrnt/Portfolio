// Redéfinir les breakpoints
@use '../../../../node_modules/bootstrap/scss/bootstrap' as bootstrap with (
  $grid-breakpoints: (
    xs: 0,
    sm: 580px,
    md: 770px,
    lg: 1250px,
    xl: 1350px,
    xxl: 1400px,
  )
);

.competence {
  font-size: 0.8rem;

  @media (min-width: map-get(bootstrap.$grid-breakpoints, sm)) {
    height: 180px;
  }

  @media (min-width: map-get(bootstrap.$grid-breakpoints, md)) {
    height: 120px;
  }

  @media (min-width: map-get(bootstrap.$grid-breakpoints, lg)) {
    height: 195px;
  }

  @media (min-width: map-get(bootstrap.$grid-breakpoints, xl)) {
    height: 160px;
  }

  @media (min-width: map-get(bootstrap.$grid-breakpoints, xxl)) {
    height: 160px;
  }
}

.col-competence {
  transition: transform 0.3s ease;

  &.hovered {
    transform: scale(1.05);
    animation: highlight-competence 2s ease forwards;
  }

  &.reset-animation {
    animation: none;
    transform: scale(1) !important;
  }
}

@keyframes highlight-competence {
  0% {
    transform: scale(1);
    box-shadow: none;
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

.card-header {
  position: relative; /* Nécessaire pour le positionnement du pseudo-élément */

  &:after {
    content: ''; /* Pseudo-élément pour rendre la marge interactive */
    position: absolute;
    bottom: -1rem; /* Étend la zone à la marge définie par Bootstrap */
    left: 0;
    right: 0;
    height: 1rem; /* Correspond à la hauteur de la marge définie par Bootstrap */
    pointer-events: all; /* Permet à la marge de capturer les événements */
  }
}
